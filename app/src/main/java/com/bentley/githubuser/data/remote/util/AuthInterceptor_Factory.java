// Generated by Dagger (https://dagger.dev).
package com.bentley.githubuser.data.remote.util;

import com.bentley.githubuser.utils.NetworkCheck;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthInterceptor_Factory implements Factory<AuthInterceptor> {
  private final Provider<NetworkCheck> networkCheckProvider;

  public AuthInterceptor_Factory(Provider<NetworkCheck> networkCheckProvider) {
    this.networkCheckProvider = networkCheckProvider;
  }

  @Override
  public AuthInterceptor get() {
    return newInstance(networkCheckProvider.get());
  }

  public static AuthInterceptor_Factory create(Provider<NetworkCheck> networkCheckProvider) {
    return new AuthInterceptor_Factory(networkCheckProvider);
  }

  public static AuthInterceptor newInstance(NetworkCheck networkCheck) {
    return new AuthInterceptor(networkCheck);
  }
}
